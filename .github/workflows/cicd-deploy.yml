name: Build, Deploy, and Rollback to EKS

on:
  push:
    branches:
      - main

env:
  EKS_CLUSTER_NAME: group20-final-eks-cluster
  IMAGE_TAG: ${{ github.sha }}

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - service: cart
            deployment: cart
            container: cart
            dockerfile: ./src/cart/src/Dockerfile
          - service: email
            deployment: email
            container: email
            dockerfile: ./src/email/Dockerfile
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build and Push Image
        run: |
          IMAGE_URI=docker.io/${{ secrets.DOCKER_USERNAME }}/${{ matrix.service }}:${{ env.IMAGE_TAG }}
          docker build -t $IMAGE_URI -f ${{ matrix.dockerfile }} .
          docker push $IMAGE_URI
          echo "IMAGE_URI=$IMAGE_URI" >> $GITHUB_ENV

  deploy:
    needs: build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - service: cart
            deployment: cart
            container: cart
          - service: email
            deployment: email
            container: email
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Update kubeconfig
        run: |
          aws eks update-kubeconfig --name $EKS_CLUSTER_NAME --region us-east-1

      - name: Deploy to EKS
        run: |
          IMAGE_URI=docker.io/${{ secrets.DOCKER_USERNAME }}/${{ matrix.service }}:${{ env.IMAGE_TAG }}
          kubectl set image deployment/${{ matrix.deployment }} ${{ matrix.container }}=$IMAGE_URI --namespace=otel-demo
          kubectl rollout status deployment/${{ matrix.deployment }} --namespace=otel-demo --timeout=60s

  rollback:
    needs: deploy
    if: failure()
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - deployment: cart
            container: cart
          - deployment: email
            container: email
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Update kubeconfig
        run: |
          aws eks update-kubeconfig --name $EKS_CLUSTER_NAME --region us-east-1

      - name: Rollback Deployment
        run: |
          echo "Rolling back ${{ matrix.deployment }} to last stable image..."
          kubectl rollout undo deployment/${{ matrix.deployment }} --namespace=otel-demo